name: ðŸš€ Build & Deploy
on:
    push:
        branches:
            - master
        paths-ignore:
            - '**/.git*'
            - '**/.git*/**'
            - '**/node_modules/**'
            - '**/.vscode/**'
            - '.editorconfig'
            - '.gitignore'
            - '.prettierignore'
            - '.prettierrc'
            - 'main.js'
            - 'package-lock.json'
            - 'package.json'
            - 'readme.md'
            - 'safelist.txt'
            - 'tailwind.config.js'
            - 'vite.config.js'
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
        - name: Checkout
            uses: actions/checkout@v3

        - name: Install Node.js LTS
            uses: actions/setup-node@v3
            with:
            node-version: 'lts/*'
            cache: 'npm'

        - name: Install Node.js dependencies
            run: npm install

        - name: Build theme
            run: |
                npm run build

        - name: Upload artifact
            # Persist data produced during the build steps with a retention period of 1 day
            uses: actions/upload-artifact@v3
            with:
            name: vite-build
            path: |
                dist/
            retention-days: 1

    deploy:
        runs-on: ubuntu-latest
        needs: build
        steps:
        - name: Checkout
            uses: actions/checkout@v3
            with:
            # Fetch the entire Git history
            fetch-depth: 0

        - name: Download artifact
            uses: actions/download-artifact@v3
            with:
            name: vite-build
            path: .

        - name: Set environment variables (master)
            if: github.ref == 'refs/heads/master'
            run: |
            echo "SFTP_USER=${{ secrets.SFTP_PROD_USER }}" >> $GITHUB_ENV
            echo "SFTP_PASS=${{ secrets.SFTP_PROD_PASS }}" >> $GITHUB_ENV
            echo "DEPLOY_PATH=/wordpress/wp-content/themes/gruyerepadelclub" >> $GITHUB_ENV

        - name: Set outputs
            # Workaround to reference environment variables as inputs
            # using step outputs, since we can't pass environment
            # variables as inputs at the moment.
            id: sftp_details
            run: |
            echo "user=${SFTP_USER}" >> $GITHUB_OUTPUT
            echo "pass=${SFTP_PASS}" >> $GITHUB_OUTPUT
            echo "deploy_path=${DEPLOY_PATH}" >> $GITHUB_OUTPUT

        - name: Deploy via SFTP
            uses: pressidium/lftp-mirror-action@v1
            with:
            host: ${{ secrets.SFTP_HOST }}
            port: ${{ secrets.SFTP_PORT }}
            user: ${{ steps.sftp_details.outputs.user }}
            pass: ${{ steps.sftp_details.outputs.pass }}
            remoteDir: ${{ steps.sftp_details.outputs.deploy_path }}
            options: '--verbose'
